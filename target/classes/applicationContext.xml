<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd"
	default-lazy-init="true">
	<description>Spring公共配置 </description>
	<!-- 使用annotation 自动注册bean, 并保证@Required、@Autowired的属性被注入 -->
	<context:component-scan base-package="com.chuangbang">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	<!-- ehcache 缓存开始 -->
	 <!-- 启用缓存注解功能，这个是必须的，否则注解不会生效，另外，该注解一定要声明在spring主配置文件中才会生效 -->  
	<cache:annotation-driven cache-manager="ehCacheManager"/>
	
	<!-- 声明cacheManager -->  
	 <bean id="ehCacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager"  > 
	 	  <property name="cacheManager">  
	        <ref local="ehDefaultCacheManager"/>  
	      </property> 
	</bean>
    
	<bean id="ehDefaultCacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">  
      <property name="configLocation">  
        <value>classpath:ehcache/ehcache.xml</value>  
     </property>  
    </bean> 
     
    <!-- 定义ehCache的工厂，并设置所使用的Cache name -->  
    <bean id="ehCache" class="org.springframework.cache.ehcache.EhCacheFactoryBean">  
	      <property name="cacheManager">  
	        <ref local="ehDefaultCacheManager"/>  
	      </property>  
	      <property name="cacheName">  
	          <value>DEFAULT_CACHE</value>  
	      </property>  
    </bean>
    
   <!-- ehcache 缓存结束 -->
   
	<!-- Jpa Entity Manager 配置 -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="persistenceUnitName" value="defaultPU" />
		<property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter" />
		<!-- <property name="packagesToScan" value="me.kafeitu.demo.activiti.entity"/> -->
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory
				</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<!-- <prop key="net.sf.ehcache.configurationResourceName">ehcache/ehcache-hibernate-local.xml</prop> -->
				<prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
				<prop key="net.sf.ehcache.configurationResourceName">ehcache/ehcache-hibernate-local.xml</prop>
				<!-- 专门为sqlserver配置 -->
				<prop key="hibernate.jdbc.use_scrollable_resultset">false</prop>
			</props>
		</property>
	</bean>

		<!-- 文件上传 -->
<!-- 	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	</bean> -->
	
	
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="UTF-8"></property>
		<property name="maxUploadSize" value="54000000"></property>
		<property name="maxInMemorySize" value="40960"></property>
		<property name="uploadTempDir" value="fileUpload/temp"></property>
	</bean>
	
	<bean id="_res" class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>res.messages</value>
			</list>
		</property>
	</bean>

	<bean id="hibernateJpaVendorAdapter"
		class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />

	<bean id="springContextHolder" class="com.chuangbang.framework.util.spring.SpringContextHolder" />

	<!-- Spring Data Jpa配置 -->
	<jpa:repositories base-package="com.chuangbang,me.kafeitu.demo.activiti"
		factory-class="com.chuangbang.framework.dao.BaseRepositoryFactoryBean"
		transaction-manager-ref="transactionManager"
		entity-manager-factory-ref="entityManagerFactory" />
		

	<!-- Jpa 事务配置 -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" order="2"
		proxy-target-class="true" />
		
	<bean id="transInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor" >  
        <property name="transactionManager">   
            <ref bean="transactionManager"/>
        </property>
        <property name="transactionAttributes">  
            <props>  
                <prop key="query*">PROPAGATION_SUPPORTS,readOnly</prop>  
                <prop key="find*">PROPAGATION_SUPPORTS,readOnly</prop>   
                <prop key="get*">PROPAGATION_SUPPORTS,readOnly</prop>  
                <prop key="select*">PROPAGATION_SUPPORTS,readOnly</prop>  
                <prop key="load*">PROPAGATION_SUPPORTS,readOnly</prop>  
                <prop key="stat*">PROPAGATION_SUPPORTS,readOnly</prop>
				<!-- 记录日志时候使用新事务 -->
                <prop key="log">PROPAGATION_REQUIRES_NEW</prop>
                <prop key="*">PROPAGATION_REQUIRED</prop>  
            </props>  
        </property>   
    </bean>
	
	<!-- production/local development环境 -->
	<beans profile="production,development">
		<context:property-placeholder
			ignore-unresolvable="true"
			location="classpath*:/application.properties,
          			  classpath*:/application.local.properties" />

		<!-- 数据源配置, 使用应用中的tomcat jdbc数据库连接池 -->
		<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
			<!-- Connection Info -->
			<property name="driverClassName" value="${jdbc.driver}" />
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />

			<!-- Connection Pooling Info -->
			<property name="maxActive" value="${dbcp.maxActive}" />
			<property name="maxIdle" value="${dbcp.maxIdle}" />
			<property name="defaultAutoCommit" value="false" />
			<!-- 连接Idle一个小时后超时 -->
			<property name="timeBetweenEvictionRunsMillis" value="3600000" />
			<property name="minEvictableIdleTimeMillis" value="3600000" />
		</bean>
	</beans>

</beans>